<?php

/**
 * Helper module for processing of regression testing on the project.
 * @author Anatolliy Polyakov <anatoliy.polyakov@door3.com>
 */

/**
 * Implements hook_menu().
 */
function regression_test_menu() {
  $items = array();

  $items['admin/config/development/regression_testing'] = array(
    'title' => 'Regression testing config',
    'description' => 'Page for peocessing and configuring regression testing page',
    'page callback' => '_regression_test_admin_page',
    'access arguments' => 'use regression testing',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function regression_test_permission() {
  return array(
    'use regression testing' => array(
      'title' => t('use regression testing'),
      'description' => t('Ability to configure and use regression testing tool'),
    )
  );
}

/**
 * Render callback for test-all_urls form.
 */
function regression_test_all_admin_form($form, &$form_state) {
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Check all existed aliases'),
  );
  return $form;
}

/**
 * Submit callback for test-all-urls form.
 */
function regression_test_all_admin_form_submit($form, &$form_state) {
  $items = db_select('url_alias', 'u')
   ->fields('u', array('source','alias'))
   ->execute()
   ->fetchAll();
  foreach ($items as $item) {
    $operations[] = array(
      '_regression_test_batch_loop',
      array(
        $item->alias,
        t('(Checking url: @operation)', array('@operation' => $item->alias)),
      ),
    );
  }
  $batch = array(
    'title' => t('Running regression tests'),
    'operations' => $operations,
    'finished' => '_regression_test_batch_finished',
  );
  batch_set($batch);
}

/**
 * Render callback for rendering test-url-by-list form.
 */
function regression_test_admin_form($form, &$form_state) {
  $form['list'] = array(
    '#type' => 'textarea',
    '#title' => t('List of urls to check'),
    '#rows' => 10,
    '#default_value' => implode("\n", variable_get('regression_test_links_list', '')),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

/**
 * Submit callback for rendering test-url-by-list form.
 */
function regression_test_admin_form_submit($form, &$form_state) {
  $values = $form_state['values'];
  $list = explode("\n", $values['list']);

  variable_set('regression_test_links_list', $list);

  foreach ($list as $item) {
    $operations[] = array(
      '_regression_test_batch_loop',
      array(
        $item,
        t('(Checking url: @operation)', array('@operation' => $item)),
      ),
    );
  }

  $batch = array(
    'title' => t('Running regression tests'),
    'operations' => $operations,
    'finished' => '_regression_test_batch_finished',
  );
  batch_set($batch);
}

/**
 * Function for processing batch loop.
 */
function _regression_test_batch_loop($item, $title, &$context) {
  $result = drupal_http_request('http://' . $_SERVER['HTTP_HOST'] . '/' . $item);
  $result->url = 'http://' . $_SERVER['HTTP_HOST'] . '/' . $item;
  if (in_array($result->code, array(200, 304))) {
    $context['results']['good'][] = array(
      'url' => $result->url,
      'status' => $result->code,
    );
  } else {
    $context['results']['bad'][] = array(
      'url' => $result->url,
      'status' => $result->code,
    );
  }
}

/**
 * Function for processing finish of batch.
 */
function _regression_test_batch_finished($success, $results, $operations) {
  if ($success) {
    $good_urls = $results['good'];
    $bad_urls = $results['bad'];
    $_SESSION['regression_test_results'] = array(
      'bad_urls' => $bad_urls,
      'good_urls' => $good_urls
    );
  }
}

/**
 * Helper function for preparing row data in table.
 */
function _regression_test_prepare_row_data($urls) {
  $rows = array();
  foreach ($urls as $item) {
    $rows[] = array(
      array('data' => $item['url']),
      array('data' => $item['status'])
    );
  }
  return $rows;
}

/**
 * Callback for rendering regression testing administration page.
 * @return render array of the page.
 */
function _regression_test_admin_page() {
  $render_array = array();

  if (user_access('use regression testing')) {
    if (!empty($_SESSION['regression_test_results'])) {
      $good_urls = $_SESSION['regression_test_results']['good_urls'];
      $bad_urls = $_SESSION['regression_test_results']['bad_urls'];
      $rows = array();
      foreach ($good_urls as $item) {
        $rows[] = array(
          array('data' => $item['url']),
          array('data' => $item['status'])
        );
      }
      $render_array[]= array(
        '#theme' => 'table',
        '#header' => array(
          array('data' => t('Bad url')),
          array('data' => t('Url status')),
        ),
        '#rows' => _regression_test_prepare_row_data($bad_urls),
      );
      $render_array[]= array(
        '#theme' => 'table',
        '#header' => array(
          array('data' => t('Good url')),
          array('data' => t('Url status')),
        ),
        '#rows' => _regression_test_prepare_row_data($good_urls),
      );
    }
    $render_array[]= drupal_get_form('regression_test_admin_form');
    $render_array[]= drupal_get_form('regression_test_all_admin_form');
    return $render_array;
  } else {
    drupal_access_denied();
  }
}



